apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: 'gradleScript/dependencies.gradle'

def config = rootProject.ext

android {
    buildToolsVersion config.buildToolsVersion
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = monitorCrash
        }
    }
    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        disable 'ParcelCreator'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

androidExtensions {
    experimental = true
}

repositories {
    mavenCentral()
}

dependencies {
    /* OmiseGO */
    implementation omisego.sdk

    /* Kotlin */
    implementation kotlinDependencies.stdlib
    implementation kotlinDependencies.coroutines

    /* Navigation Component */
    implementation navigation.navFragment
    implementation navigation.navUI
    /* Architecture Component */
    implementation arch.viewmodel
    implementation arch.extensions
    /* Databinding */
    kapt databinding.compiler
    /* Support library */
    implementation supportDependencies.appCompat
    implementation supportDependencies.design
    implementation supportDependencies.cardView
    /* Networking */
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.converterGson
    /* Load image */
    implementation glide.glide

    implementation custom.constraintLayout
    implementation custom.shimmer
    implementation custom.stetho
    implementation custom.dropdown
    implementation custom.dexter
    implementation custom.biometric
    implementation okHttp3.loggingIntercepter
    implementation firebase.crashlytics

    testImplementation test
}

apply plugin: 'com.google.gms.google-services'
